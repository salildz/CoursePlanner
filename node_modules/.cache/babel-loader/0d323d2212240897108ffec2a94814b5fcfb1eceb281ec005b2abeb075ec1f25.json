{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salih\\\\Desktop\\\\CourseSon\\\\courseplanner\\\\src\\\\WeeklySchedule1.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { useData } from \"./DataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklySchedule1 = ({\n  generateScheduleSignal\n}) => {\n  _s();\n  useEffect(() => {\n    if (generateScheduleSignal) {\n      generateSchedule();\n    }\n  }, [generateScheduleSignal]);\n  const {\n    busyData,\n    setClassroomData,\n    classroomData,\n    coursesData,\n    servicesData\n  } = useData();\n  //const [generateScheduleSignal, setGenerateScheduleSignal] = useState(false);\n  const timeslots = [\"8:30\", \"9:30\", \"10:30\", \"11:30\", \"12:30\", \"13:30\", \"14:30\", \"15:30\"];\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  const scheduleData = {\n    1: {\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"sali\"],\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    },\n    2: {\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    },\n    3: {\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    },\n    4: {\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n    }\n  };\n  const handleClassroom = () => {\n    function sortBySecondElement(a, b) {\n      return parseInt(a[1]) - parseInt(b[1]);\n    }\n    classroomData.sort(sortBySecondElement);\n    console.log(classroomData);\n  };\n  const isClasroomFree = (classroom, day, timeslot) => {\n    for (let i = 1; i <= 4; i++) {\n      if (scheduleData[i][day][timeslot].includes(classroom)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  //  alert(isClasroomFree(\"B503\", \"Monday\", 6));\n  const assignClasroomForServices = numberOfStudents => {\n    for (let i = 0; i < classroomData.length; i++) {\n      if (numberOfStudents <= parseInt(classroomData[i][1])) {\n        return classroomData[i][0];\n      }\n    }\n    return \"-1\";\n  };\n  const assignClasroom = (numberOfStudents, day, startTimeslot, numberOfLessons) => {\n    for (let i = 0; i < classroomData.length; i++) {\n      //iterate through classrooms\n      let isCurrentClasroomAvailable = true;\n      if (numberOfStudents <= parseInt(classroomData[i][1])) {\n        for (let j = 0; isCurrentClasroomAvailable && j < numberOfLessons; j++) {\n          //iterate through timeslots\n          if (!isClasroomFree(classroomData[i][0], day, startTimeslot + j)) {\n            isCurrentClasroomAvailable = false;\n          }\n        }\n        if (isCurrentClasroomAvailable) {\n          return classroomData[i][0];\n        }\n      }\n    }\n    return \"-1\"; //returns -1 if there is no suitiable clasroom\n  };\n  const isInstructorAvailable = (instructor, day, time) => {\n    let isAvailable = true;\n    for (let i = 0; i < busyData.length; i++) {\n      if (busyData[i][0] == instructor && busyData[i][1] == day && busyData[i][2].indexOf(time) != -1) {\n        isAvailable = false;\n      }\n    }\n    return isAvailable;\n  };\n  const handleCourses = () => {\n    for (let i = 0; i < coursesData.length; i++) {\n      let isIncludedInServices = false;\n      servicesData.forEach(arr => {\n        //checks if current element of coursesData is a service course\n        if (arr.indexOf(coursesData[i][0]) != -1) {\n          isIncludedInServices = true;\n        }\n      });\n      if (isIncludedInServices) {\n        continue;\n      }\n      let isAssigned = false; //stores if fully assigned\n      let isAssigned2 = false; //stores if first 2 of 2+1 assigned\n      switch (coursesData[i][8]) {\n        case \"3\":\n          for (let j = 0; !isAssigned && j < 5; j++) {\n            //iterate through selected classes' DAYS\n            let day = days[j];\n            for (let k = 0; !isAssigned && k < scheduleData[coursesData[i][2]][day].length; k++) {\n              //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\n              if (k < 6 && scheduleData[coursesData[i][2]][day][k] == \"\" && scheduleData[coursesData[i][2]][day][k + 1] == \"\" && scheduleData[coursesData[i][2]][day][k + 2] == \"\" && isInstructorAvailable(coursesData[i][7], day, timeslots[k]) && isInstructorAvailable(coursesData[i][7], day, timeslots[k + 1]) && isInstructorAvailable(coursesData[i][7], day, timeslots[k + 2]) && assignClasroom(coursesData[i][6], day, k, 3) != \"-1\") {\n                ////checks if upcoming 3 hour is free on schedule and instructor\n\n                let classroom = assignClasroom(coursesData[i][6], day, k, 3);\n                scheduleData[coursesData[i][2]][day][k] = coursesData[i][0] + \"(\" + classroom + \")\";\n                scheduleData[coursesData[i][2]][day][k + 1] = coursesData[i][0] + \"(\" + classroom + \")\";\n                scheduleData[coursesData[i][2]][day][k + 2] = coursesData[i][0] + \"(\" + classroom + \")\";\n                isAssigned = true;\n              }\n            }\n          }\n          break;\n        case \"2+1\":\n          if (!isAssigned2) {\n            for (let j = 0; !isAssigned2 && j < 5; j++) {\n              //iterate through selected classes' DAYS\n              let day = days[j];\n              for (let k = 0; !isAssigned2 && k < scheduleData[coursesData[i][2]][day].length; k++) {\n                //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\n                if (k < 7 && scheduleData[coursesData[i][2]][day][k] == \"\" && scheduleData[coursesData[i][2]][day][k + 1] == \"\" && isInstructorAvailable(coursesData[i][7], day, timeslots[k]) && isInstructorAvailable(coursesData[i][7], day, timeslots[k + 1]) && assignClasroom(coursesData[i][6], day, k, 2) != \"-1\") {\n                  //checks if upcoming 2 hour is free on schedule and instructor\n                  let classroom = assignClasroom(coursesData[i][6], day, k, 2);\n                  scheduleData[coursesData[i][2]][day][k] = coursesData[i][0] + \"(\" + classroom + \")\";\n                  scheduleData[coursesData[i][2]][day][k + 1] = coursesData[i][0] + \"(\" + classroom + \")\";\n                  isAssigned2 = true;\n                }\n              }\n            }\n          }\n          if (isAssigned2 && !isAssigned) {\n            for (let j = 0; !isAssigned && j < 5; j++) {\n              //iterate through selected classes' DAYS\n              let day = days[j];\n              for (let k = 0; !isAssigned && k < scheduleData[coursesData[i][2]][day].length; k++) {\n                //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\n                if (scheduleData[coursesData[i][2]][day][k] == \"\" && isInstructorAvailable(coursesData[i][7], day, timeslots[k] && assignClasroom(coursesData[i][6], day, k, 1) != \"-1\")) {\n                  //checks if that hour is free on schedule and instructor\n                  let classroom = assignClasroom(coursesData[i][6], day, k, 1);\n                  scheduleData[coursesData[i][2]][day][k] = coursesData[i][0] + \"(\" + classroom + \")\";\n                  isAssigned = true;\n                }\n              }\n            }\n          }\n          break;\n        default:\n          alert(\"There is a problem with course file!!\");\n          return;\n      }\n    }\n  };\n  const handleServices = () => {\n    let classNumber, day, time, numberOfStudents;\n    for (let i = 0; i < servicesData.length; i++) {\n      switch (servicesData[i][0].match(/\\d+/)[0].charAt(0)) {\n        case \"1\":\n          classNumber = \"1\";\n          break;\n        case \"2\":\n          classNumber = \"2\";\n          break;\n        case \"3\":\n          classNumber = \"3\";\n          break;\n        case \"4\":\n          classNumber = \"4\";\n          break;\n        default:\n          break;\n      }\n      day = servicesData[i][1];\n      time = servicesData[i][2].split(\",\");\n      for (let k = 0; k < coursesData.length; k++) {\n        if (coursesData[k][0] == servicesData[i][0]) {\n          numberOfStudents = parseInt(coursesData[k][6]);\n          break;\n        }\n      }\n      let classroom = assignClasroomForServices(numberOfStudents);\n      for (let j = 0; j < time.length; j++) {\n        scheduleData[classNumber][day][timeslots.indexOf(time[j])] = servicesData[i][0] + \"(\" + classroom + \")\";\n      }\n    }\n  };\n  const generateSchedule = () => {\n    handleClassroom();\n    handleServices();\n    handleCourses();\n    //    setGenerateScheduleSignal(false);\n    alert(scheduleData[1][\"Monday\"][1]);\n  };\n  useEffect(() => {\n    if (generateScheduleSignal) {\n      generateSchedule();\n    }\n  }, [generateScheduleSignal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(scheduleData).map(classNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [classNumber, \". Class\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"content-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), timeslots.map((time, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: time\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(scheduleData[classNumber]).map(day => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), scheduleData[classNumber][day].map((className, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: className\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this))]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklySchedule1, \"+67Fiqeb/3+vmJoIv+pXtesCTI4=\", false, function () {\n  return [useData];\n});\n_c = WeeklySchedule1;\nexport default WeeklySchedule1;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule1\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Row","Col","useData","jsxDEV","_jsxDEV","WeeklySchedule1","generateScheduleSignal","_s","generateSchedule","busyData","setClassroomData","classroomData","coursesData","servicesData","timeslots","days","scheduleData","Monday","Tuesday","Wednesday","Thursday","Friday","handleClassroom","sortBySecondElement","a","b","parseInt","sort","console","log","isClasroomFree","classroom","day","timeslot","i","includes","assignClasroomForServices","numberOfStudents","length","assignClasroom","startTimeslot","numberOfLessons","isCurrentClasroomAvailable","j","isInstructorAvailable","instructor","time","isAvailable","indexOf","handleCourses","isIncludedInServices","forEach","arr","isAssigned","isAssigned2","k","alert","handleServices","classNumber","match","charAt","split","children","Object","keys","map","className","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/salih/Desktop/CourseSon/courseplanner/src/WeeklySchedule1.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { useData } from \"./DataContext\";\r\n\r\nconst WeeklySchedule1 = ({ generateScheduleSignal }) => {\r\n  useEffect(() => {\r\n    if (generateScheduleSignal) {\r\n      generateSchedule();\r\n    }\r\n  }, [generateScheduleSignal]);\r\n  const {\r\n    busyData,\r\n    setClassroomData,\r\n    classroomData,\r\n    coursesData,\r\n    servicesData,\r\n  } = useData();\r\n  //const [generateScheduleSignal, setGenerateScheduleSignal] = useState(false);\r\n  const timeslots = [\r\n    \"8:30\",\r\n    \"9:30\",\r\n    \"10:30\",\r\n    \"11:30\",\r\n    \"12:30\",\r\n    \"13:30\",\r\n    \"14:30\",\r\n    \"15:30\",\r\n  ];\r\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n  \r\n  const scheduleData = {\r\n    1: {\r\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"sali\"],\r\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    2: {\r\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    3: {\r\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    4: {\r\n      Monday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Tuesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Wednesday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Thursday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n      Friday: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n  };\r\n\r\n  \r\n  const handleClassroom = () => {\r\n    function sortBySecondElement(a, b) {\r\n      return parseInt(a[1]) - parseInt(b[1]);\r\n    }\r\n    classroomData.sort(sortBySecondElement);\r\n    console.log(classroomData);\r\n  };\r\n\r\n  const isClasroomFree = (classroom, day, timeslot) => {\r\n    for (let i = 1; i <= 4; i++) {\r\n      if (scheduleData[i][day][timeslot].includes(classroom)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n//  alert(isClasroomFree(\"B503\", \"Monday\", 6));\r\n  const assignClasroomForServices = (numberOfStudents) => {\r\n    for (let i = 0; i < classroomData.length; i++) {\r\n      if (numberOfStudents <= parseInt(classroomData[i][1])) {\r\n        return classroomData[i][0];\r\n      }\r\n    }\r\n    return \"-1\";\r\n  };\r\n\r\n  const assignClasroom = (\r\n    numberOfStudents,\r\n    day,\r\n    startTimeslot,\r\n    numberOfLessons\r\n  ) => {\r\n    for (let i = 0; i < classroomData.length; i++) {\r\n      //iterate through classrooms\r\n      let isCurrentClasroomAvailable = true;\r\n      if (numberOfStudents <= parseInt(classroomData[i][1])) {\r\n        for (\r\n          let j = 0;\r\n          isCurrentClasroomAvailable && j < numberOfLessons;\r\n          j++\r\n        ) {\r\n          //iterate through timeslots\r\n          if (!isClasroomFree(classroomData[i][0], day, startTimeslot + j)) {\r\n            isCurrentClasroomAvailable = false;\r\n          }\r\n        }\r\n        if (isCurrentClasroomAvailable) {\r\n          return classroomData[i][0];\r\n        }\r\n      }\r\n    }\r\n    return \"-1\"; //returns -1 if there is no suitiable clasroom\r\n  };\r\n\r\n  const isInstructorAvailable = (instructor, day, time) => {\r\n    let isAvailable = true;\r\n    for (let i = 0; i < busyData.length; i++) {\r\n      if (\r\n        busyData[i][0] == instructor &&\r\n        busyData[i][1] == day &&\r\n        busyData[i][2].indexOf(time) != -1\r\n      ) {\r\n        isAvailable = false;\r\n      }\r\n    }\r\n    return isAvailable;\r\n  };\r\n\r\n  const handleCourses = () => {\r\n    for (let i = 0; i < coursesData.length; i++) {\r\n      let isIncludedInServices = false;\r\n      servicesData.forEach((arr) => {\r\n        //checks if current element of coursesData is a service course\r\n        if (arr.indexOf(coursesData[i][0]) != -1) {\r\n          isIncludedInServices = true;\r\n        }\r\n      });\r\n      if (isIncludedInServices) {\r\n        continue;\r\n      }\r\n\r\n      let isAssigned = false; //stores if fully assigned\r\n      let isAssigned2 = false; //stores if first 2 of 2+1 assigned\r\n      switch (coursesData[i][8]) {\r\n        case \"3\":\r\n          for (let j = 0; !isAssigned && j < 5; j++) {\r\n            //iterate through selected classes' DAYS\r\n            let day = days[j];\r\n\r\n            for (\r\n              let k = 0;\r\n              !isAssigned && k < scheduleData[coursesData[i][2]][day].length;\r\n              k++\r\n            ) {\r\n              //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\r\n              if (\r\n                k < 6 &&\r\n                scheduleData[coursesData[i][2]][day][k] == \"\" &&\r\n                scheduleData[coursesData[i][2]][day][k + 1] == \"\" &&\r\n                scheduleData[coursesData[i][2]][day][k + 2] == \"\" &&\r\n                isInstructorAvailable(coursesData[i][7], day, timeslots[k]) &&\r\n                isInstructorAvailable(\r\n                  coursesData[i][7],\r\n                  day,\r\n                  timeslots[k + 1]\r\n                ) &&\r\n                isInstructorAvailable(\r\n                  coursesData[i][7],\r\n                  day,\r\n                  timeslots[k + 2]\r\n                ) &&\r\n                assignClasroom(coursesData[i][6], day, k, 3) != \"-1\"\r\n              ) {\r\n                ////checks if upcoming 3 hour is free on schedule and instructor\r\n\r\n                let classroom = assignClasroom(coursesData[i][6], day, k, 3);\r\n                scheduleData[coursesData[i][2]][day][k] =\r\n                  coursesData[i][0] + \"(\" + classroom + \")\";\r\n                scheduleData[coursesData[i][2]][day][k + 1] =\r\n                  coursesData[i][0] + \"(\" + classroom + \")\";\r\n                scheduleData[coursesData[i][2]][day][k + 2] =\r\n                  coursesData[i][0] + \"(\" + classroom + \")\";\r\n                isAssigned = true;\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case \"2+1\":\r\n          if (!isAssigned2) {\r\n            for (let j = 0; !isAssigned2 && j < 5; j++) {\r\n              //iterate through selected classes' DAYS\r\n              let day = days[j];\r\n\r\n              for (\r\n                let k = 0;\r\n                !isAssigned2 && k < scheduleData[coursesData[i][2]][day].length;\r\n                k++\r\n              ) {\r\n                //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\r\n                if (\r\n                  k < 7 &&\r\n                  scheduleData[coursesData[i][2]][day][k] == \"\" &&\r\n                  scheduleData[coursesData[i][2]][day][k + 1] == \"\" &&\r\n                  isInstructorAvailable(coursesData[i][7], day, timeslots[k]) &&\r\n                  isInstructorAvailable(\r\n                    coursesData[i][7],\r\n                    day,\r\n                    timeslots[k + 1]\r\n                  ) &&\r\n                  assignClasroom(coursesData[i][6], day, k, 2) != \"-1\"\r\n                ) {\r\n                  //checks if upcoming 2 hour is free on schedule and instructor\r\n                  let classroom = assignClasroom(coursesData[i][6], day, k, 2);\r\n                  scheduleData[coursesData[i][2]][day][k] =\r\n                    coursesData[i][0] + \"(\" + classroom + \")\";\r\n                  scheduleData[coursesData[i][2]][day][k + 1] =\r\n                    coursesData[i][0] + \"(\" + classroom + \")\";\r\n                  isAssigned2 = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (isAssigned2 && !isAssigned) {\r\n            for (let j = 0; !isAssigned && j < 5; j++) {\r\n              //iterate through selected classes' DAYS\r\n              let day = days[j];\r\n\r\n              for (\r\n                let k = 0;\r\n                !isAssigned && k < scheduleData[coursesData[i][2]][day].length;\r\n                k++\r\n              ) {\r\n                //iterate through selected day's HOURS          i=coursesData, j=day, k=hour\r\n                if (\r\n                  scheduleData[coursesData[i][2]][day][k] == \"\" &&\r\n                  isInstructorAvailable(\r\n                    coursesData[i][7],\r\n                    day,\r\n                    timeslots[k] &&\r\n                      assignClasroom(coursesData[i][6], day, k, 1) != \"-1\"\r\n                  )\r\n                ) {\r\n                  //checks if that hour is free on schedule and instructor\r\n                  let classroom = assignClasroom(coursesData[i][6], day, k, 1);\r\n                  scheduleData[coursesData[i][2]][day][k] =\r\n                    coursesData[i][0] + \"(\" + classroom + \")\";\r\n                  isAssigned = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          alert(\"There is a problem with course file!!\");\r\n          return;\r\n      }\r\n    }\r\n  };\r\n  const handleServices = () => {\r\n    let classNumber, day, time, numberOfStudents;\r\n    for (let i = 0; i < servicesData.length; i++) {\r\n      switch (servicesData[i][0].match(/\\d+/)[0].charAt(0)) {\r\n        case \"1\":\r\n          classNumber = \"1\";\r\n          break;\r\n        case \"2\":\r\n          classNumber = \"2\";\r\n          break;\r\n        case \"3\":\r\n          classNumber = \"3\";\r\n          break;\r\n        case \"4\":\r\n          classNumber = \"4\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      day = servicesData[i][1];\r\n      time = servicesData[i][2].split(\",\");\r\n      for (let k = 0; k < coursesData.length; k++) {\r\n        if (coursesData[k][0] == servicesData[i][0]) {\r\n          numberOfStudents = parseInt(coursesData[k][6]);\r\n          break;\r\n        }\r\n      }\r\n      let classroom = assignClasroomForServices(numberOfStudents);\r\n      for (let j = 0; j < time.length; j++) {\r\n        scheduleData[classNumber][day][timeslots.indexOf(time[j])] =\r\n          servicesData[i][0] + \"(\" + classroom + \")\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const generateSchedule = () => {\r\n    handleClassroom();\r\n    handleServices();\r\n    handleCourses();\r\n//    setGenerateScheduleSignal(false);\r\n    alert(scheduleData[1][\"Monday\"][1]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (generateScheduleSignal) {\r\n      generateSchedule();\r\n    }\r\n  }, [generateScheduleSignal]);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        {Object.keys(scheduleData).map((classNumber) => (\r\n          \r\n             <div className=\"table-container\">\r\n            <h1>{classNumber}. Class</h1>\r\n            <table className=\"content-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Day</th>\r\n                  {timeslots.map((time, index) => (\r\n                    <th key={index}>{time}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.keys(scheduleData[classNumber]).map((day) => (\r\n                  <tr key={day}>\r\n                    <td>{day}</td>\r\n                    {scheduleData[classNumber][day].map((className, index) => (\r\n                      <td key={index}>{className}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            </div>\r\n          \r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n  \r\n};\r\nexport default WeeklySchedule1;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AACrC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EACtDR,SAAS,CAAC,MAAM;IACd,IAAIO,sBAAsB,EAAE;MAC1BE,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,sBAAsB,CAAC,CAAC;EAC5B,MAAM;IACJG,QAAQ;IACRC,gBAAgB;IAChBC,aAAa;IACbC,WAAW;IACXC;EACF,CAAC,GAAGX,OAAO,CAAC,CAAC;EACb;EACA,MAAMY,SAAS,GAAG,CAChB,MAAM,EACN,MAAM,EACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;EACD,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;EAErE,MAAMC,YAAY,GAAG;IACnB,CAAC,EAAE;MACDC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC;MAC5CC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACzCC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1CC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzC,CAAC;IACD,CAAC,EAAE;MACDJ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACzCC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1CC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzC,CAAC;IACD,CAAC,EAAE;MACDJ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACzCC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1CC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzC,CAAC;IACD,CAAC,EAAE;MACDJ,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACzCC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC1CC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzC;EACF,CAAC;EAGD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,SAASC,mBAAmBA,CAACC,CAAC,EAAEC,CAAC,EAAE;MACjC,OAAOC,QAAQ,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGE,QAAQ,CAACD,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC;IACAd,aAAa,CAACgB,IAAI,CAACJ,mBAAmB,CAAC;IACvCK,OAAO,CAACC,GAAG,CAAClB,aAAa,CAAC;EAC5B,CAAC;EAED,MAAMmB,cAAc,GAAGA,CAACC,SAAS,EAAEC,GAAG,EAAEC,QAAQ,KAAK;IACnD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3B,IAAIlB,YAAY,CAACkB,CAAC,CAAC,CAACF,GAAG,CAAC,CAACC,QAAQ,CAAC,CAACE,QAAQ,CAACJ,SAAS,CAAC,EAAE;QACtD,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;;EAEH;EACE,MAAMK,yBAAyB,GAAIC,gBAAgB,IAAK;IACtD,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,aAAa,CAAC2B,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC7C,IAAIG,gBAAgB,IAAIX,QAAQ,CAACf,aAAa,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACrD,OAAOvB,aAAa,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMK,cAAc,GAAGA,CACrBF,gBAAgB,EAChBL,GAAG,EACHQ,aAAa,EACbC,eAAe,KACZ;IACH,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,aAAa,CAAC2B,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC7C;MACA,IAAIQ,0BAA0B,GAAG,IAAI;MACrC,IAAIL,gBAAgB,IAAIX,QAAQ,CAACf,aAAa,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACrD,KACE,IAAIS,CAAC,GAAG,CAAC,EACTD,0BAA0B,IAAIC,CAAC,GAAGF,eAAe,EACjDE,CAAC,EAAE,EACH;UACA;UACA,IAAI,CAACb,cAAc,CAACnB,aAAa,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEQ,aAAa,GAAGG,CAAC,CAAC,EAAE;YAChED,0BAA0B,GAAG,KAAK;UACpC;QACF;QACA,IAAIA,0BAA0B,EAAE;UAC9B,OAAO/B,aAAa,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B;MACF;IACF;IACA,OAAO,IAAI,CAAC,CAAC;EACf,CAAC;EAED,MAAMU,qBAAqB,GAAGA,CAACC,UAAU,EAAEb,GAAG,EAAEc,IAAI,KAAK;IACvD,IAAIC,WAAW,GAAG,IAAI;IACtB,KAAK,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,QAAQ,CAAC6B,MAAM,EAAEJ,CAAC,EAAE,EAAE;MACxC,IACEzB,QAAQ,CAACyB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIW,UAAU,IAC5BpC,QAAQ,CAACyB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIF,GAAG,IACrBvB,QAAQ,CAACyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,OAAO,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC,EAClC;QACAC,WAAW,GAAG,KAAK;MACrB;IACF;IACA,OAAOA,WAAW;EACpB,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,WAAW,CAAC0B,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC3C,IAAIgB,oBAAoB,GAAG,KAAK;MAChCrC,YAAY,CAACsC,OAAO,CAAEC,GAAG,IAAK;QAC5B;QACA,IAAIA,GAAG,CAACJ,OAAO,CAACpC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;UACxCgB,oBAAoB,GAAG,IAAI;QAC7B;MACF,CAAC,CAAC;MACF,IAAIA,oBAAoB,EAAE;QACxB;MACF;MAEA,IAAIG,UAAU,GAAG,KAAK,CAAC,CAAC;MACxB,IAAIC,WAAW,GAAG,KAAK,CAAC,CAAC;MACzB,QAAQ1C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,KAAK,GAAG;UACN,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAE,CAACU,UAAU,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;YACzC;YACA,IAAIX,GAAG,GAAGjB,IAAI,CAAC4B,CAAC,CAAC;YAEjB,KACE,IAAIY,CAAC,GAAG,CAAC,EACT,CAACF,UAAU,IAAIE,CAAC,GAAGvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACM,MAAM,EAC9DiB,CAAC,EAAE,EACH;cACA;cACA,IACEA,CAAC,GAAG,CAAC,IACLvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,IAAI,EAAE,IAC7CvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IACjDvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IACjDX,qBAAqB,CAAChC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAElB,SAAS,CAACyC,CAAC,CAAC,CAAC,IAC3DX,qBAAqB,CACnBhC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBF,GAAG,EACHlB,SAAS,CAACyC,CAAC,GAAG,CAAC,CACjB,CAAC,IACDX,qBAAqB,CACnBhC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBF,GAAG,EACHlB,SAAS,CAACyC,CAAC,GAAG,CAAC,CACjB,CAAC,IACDhB,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EACpD;gBACA;;gBAEA,IAAIxB,SAAS,GAAGQ,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC;gBAC5DvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,GACrC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;gBAC3Cf,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,GACzC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;gBAC3Cf,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,GACzC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;gBAC3CsB,UAAU,GAAG,IAAI;cACnB;YACF;UACF;UACA;QACF,KAAK,KAAK;UACR,IAAI,CAACC,WAAW,EAAE;YAChB,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAE,CAACW,WAAW,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;cAC1C;cACA,IAAIX,GAAG,GAAGjB,IAAI,CAAC4B,CAAC,CAAC;cAEjB,KACE,IAAIY,CAAC,GAAG,CAAC,EACT,CAACD,WAAW,IAAIC,CAAC,GAAGvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACM,MAAM,EAC/DiB,CAAC,EAAE,EACH;gBACA;gBACA,IACEA,CAAC,GAAG,CAAC,IACLvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,IAAI,EAAE,IAC7CvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IACjDX,qBAAqB,CAAChC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAElB,SAAS,CAACyC,CAAC,CAAC,CAAC,IAC3DX,qBAAqB,CACnBhC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBF,GAAG,EACHlB,SAAS,CAACyC,CAAC,GAAG,CAAC,CACjB,CAAC,IACDhB,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EACpD;kBACA;kBACA,IAAIxB,SAAS,GAAGQ,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC;kBAC5DvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,GACrC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;kBAC3Cf,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,GAAG,CAAC,CAAC,GACzC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;kBAC3CuB,WAAW,GAAG,IAAI;gBACpB;cACF;YACF;UACF;UACA,IAAIA,WAAW,IAAI,CAACD,UAAU,EAAE;YAC9B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAE,CAACU,UAAU,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;cACzC;cACA,IAAIX,GAAG,GAAGjB,IAAI,CAAC4B,CAAC,CAAC;cAEjB,KACE,IAAIY,CAAC,GAAG,CAAC,EACT,CAACF,UAAU,IAAIE,CAAC,GAAGvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACM,MAAM,EAC9DiB,CAAC,EAAE,EACH;gBACA;gBACA,IACEvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,IAAI,EAAE,IAC7CX,qBAAqB,CACnBhC,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBF,GAAG,EACHlB,SAAS,CAACyC,CAAC,CAAC,IACVhB,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC,IAAI,IACpD,CAAC,EACD;kBACA;kBACA,IAAIxB,SAAS,GAAGQ,cAAc,CAAC3B,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEF,GAAG,EAAEuB,CAAC,EAAE,CAAC,CAAC;kBAC5DvC,YAAY,CAACJ,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACuB,CAAC,CAAC,GACrC3C,WAAW,CAACsB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;kBAC3CsB,UAAU,GAAG,IAAI;gBACnB;cACF;YACF;UACF;UACA;QACF;UACEG,KAAK,CAAC,uCAAuC,CAAC;UAC9C;MACJ;IACF;EACF,CAAC;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,WAAW,EAAE1B,GAAG,EAAEc,IAAI,EAAET,gBAAgB;IAC5C,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,YAAY,CAACyB,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC5C,QAAQrB,YAAY,CAACqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACyB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;QAClD,KAAK,GAAG;UACNF,WAAW,GAAG,GAAG;UACjB;QACF,KAAK,GAAG;UACNA,WAAW,GAAG,GAAG;UACjB;QACF,KAAK,GAAG;UACNA,WAAW,GAAG,GAAG;UACjB;QACF,KAAK,GAAG;UACNA,WAAW,GAAG,GAAG;UACjB;QACF;UACE;MACJ;MACA1B,GAAG,GAAGnB,YAAY,CAACqB,CAAC,CAAC,CAAC,CAAC,CAAC;MACxBY,IAAI,GAAGjC,YAAY,CAACqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC2B,KAAK,CAAC,GAAG,CAAC;MACpC,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3C,WAAW,CAAC0B,MAAM,EAAEiB,CAAC,EAAE,EAAE;QAC3C,IAAI3C,WAAW,CAAC2C,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI1C,YAAY,CAACqB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAC3CG,gBAAgB,GAAGX,QAAQ,CAACd,WAAW,CAAC2C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC9C;QACF;MACF;MACA,IAAIxB,SAAS,GAAGK,yBAAyB,CAACC,gBAAgB,CAAC;MAC3D,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,IAAI,CAACR,MAAM,EAAEK,CAAC,EAAE,EAAE;QACpC3B,YAAY,CAAC0C,WAAW,CAAC,CAAC1B,GAAG,CAAC,CAAClB,SAAS,CAACkC,OAAO,CAACF,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,GACxD9B,YAAY,CAACqB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG;MAC9C;IACF;EACF,CAAC;EAED,MAAMvB,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bc,eAAe,CAAC,CAAC;IACjBmC,cAAc,CAAC,CAAC;IAChBR,aAAa,CAAC,CAAC;IACnB;IACIO,KAAK,CAACxC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIO,sBAAsB,EAAE;MAC1BE,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,sBAAsB,CAAC,CAAC;EAE5B,oBACEF,OAAA;IAAA0D,QAAA,eACE1D,OAAA,CAACJ,GAAG;MAAA8D,QAAA,EACDC,MAAM,CAACC,IAAI,CAAChD,YAAY,CAAC,CAACiD,GAAG,CAAEP,WAAW,iBAEtCtD,OAAA;QAAK8D,SAAS,EAAC,iBAAiB;QAAAJ,QAAA,gBACjC1D,OAAA;UAAA0D,QAAA,GAAKJ,WAAW,EAAC,SAAO;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BlE,OAAA;UAAO8D,SAAS,EAAC,eAAe;UAAAJ,QAAA,gBAC9B1D,OAAA;YAAA0D,QAAA,eACE1D,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBAAA0D,QAAA,EAAI;cAAG;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACXxD,SAAS,CAACmD,GAAG,CAAC,CAACnB,IAAI,EAAEyB,KAAK,kBACzBnE,OAAA;gBAAA0D,QAAA,EAAiBhB;cAAI,GAAZyB,KAAK;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRlE,OAAA;YAAA0D,QAAA,EACGC,MAAM,CAACC,IAAI,CAAChD,YAAY,CAAC0C,WAAW,CAAC,CAAC,CAACO,GAAG,CAAEjC,GAAG,iBAC9C5B,OAAA;cAAA0D,QAAA,gBACE1D,OAAA;gBAAA0D,QAAA,EAAK9B;cAAG;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACbtD,YAAY,CAAC0C,WAAW,CAAC,CAAC1B,GAAG,CAAC,CAACiC,GAAG,CAAC,CAACC,SAAS,EAAEK,KAAK,kBACnDnE,OAAA;gBAAA0D,QAAA,EAAiBI;cAAS,GAAjBK,KAAK;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAChC,CAAC;YAAA,GAJKtC,GAAG;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKR,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAER;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAC/D,EAAA,CApVIF,eAAe;EAAA,QAYfH,OAAO;AAAA;AAAAsE,EAAA,GAZPnE,eAAe;AAqVrB,eAAeA,eAAe;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}